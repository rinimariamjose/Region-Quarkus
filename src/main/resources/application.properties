quarkus.profile = dev
service.name = logistix-hcm
quarkus.http.root-path = /hcm
quarkus.http.port = 8080

quarkus.swagger-ui.urls.direct=/hcm/q/openapi
quarkus.swagger-ui.always-include=true

# configure your datasource for local
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = 1234
quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/quarkusregion

# Logging of SQL statements
quarkus.hibernate-orm.log.sql = true

# Hibernate physical naming strategy 
quarkus.hibernate-orm.physical-naming-strategy = org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = update

# API specification doc
mp.openapi.extensions.smallrye.info.title = Logistix HR API
mp.openapi.extensions.smallrye.info.version = 1.0.0
mp.openapi.extensions.smallrye.info.description = This microservice provides REST endpoints for HR operations
mp.openapi.extensions.smallrye.info.contact.email = techsupport@strebentechnik.com
mp.openapi.extensions.smallrye.info.contact.name = Technical Support
mp.openapi.extensions.smallrye.info.contact.url = https://www.strebentechnik.com

# cors policy issue solution
quarkus.http.cors = true
quarkus.http.cors.origins = *
quarkus.http.cors.methods = GET,PUT,POST,PATCH,DELETE,OPTIONS
quarkus.http.cors.headers = Accept,Content-Type,Content-Length,Accept-Encoding,Authorization